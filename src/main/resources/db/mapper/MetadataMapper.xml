<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tkurek.wat.Etl.mapper.MetadataMapper">

    <insert id="insertLogImporter" useGeneratedKeys="true" keyProperty="brand.id" keyColumn="id">
        insert into logImporter (tableName, importTime, success)
         values (#{logImporter.tableName}, #{logImporter.importTime}, #{logImporter.success});
    </insert>

    <select id="findLastTimestampForTable" resultType="java.sql.Timestamp">
        select max(importTime) from logImporter
         where tableName = #{className} and success = 1;
    </select>

    <insert id="insertBadDelivery">
        insert into badDelivery (idDelivery, nameProvider, codeProduct, quantityProduct, timestampFrom, timestampTo, executed)
        values (#{delivery.idDelivery}, #{delivery.nameProvider}, #{delivery.codeProduct}, #{delivery.quantityProduct}, #{delivery.timestampFrom}, #{delivery.timestampTo}, 0);
    </insert>

    <insert id="insertBadSale">
        insert into badSale (idSale, codeProduct, nameShop, quantityProduct, timestampFrom, timestampTo, executed)
        values (#{sale.idSale}, #{sale.codeProduct}, #{sale.nameShop}, #{sale.quantityProduct}, #{sale.timestampFrom}, #{sale.timestampTo}, 0);
    </insert>

    <select id="selectAllBadDelivery" resultType="com.tkurek.wat.Etl.model.stage.Stage_Delivery">
        select idDelivery, nameProvider, codeProduct, quantityProduct, timestampFrom, timestampTo
        from badDelivery
        where executed = 0;
    </select>

    <select id="selectAllBadSale" resultType="com.tkurek.wat.Etl.model.stage.Stage_Sale">
        select idSale, codeProduct, nameShop, quantityProduct, timestampFrom, timestampTo
        from badSale
        where executed = 0;
    </select>

    <update id="checkAsExecutedAllBadDelivery">
        update badDelivery
        set executed = 1;
    </update>

    <update id="checkAsExecutedAllBadSale">
        update badSale
        set executed = 1;
    </update>

    <delete id="cleanTable">
        delete from ${tableName};
    </delete>

</mapper>